user_pass = ["{{ vm_passwords[0] }}"{% for pass in vm_passwords[1:] %} ,"{{ pass }}"{% endfor %}]
$default_network_interface = `ip route | awk '/^default/ {printf "%s", $5; exit 0}'`

Vagrant.configure("2") do |config|
    config.vm.define "master" do |master|
        master.vm.box = "ubuntu/jammy64"
        master.vm.provider "virtualbox" do |vb|
            vb.memory = "4096"
            vb.customize ["modifyvm", :id, "--cpus", "2"]
            vb.customize ["modifyvm", :id, "--ioapic", "on"]
        end
        master.vm.network "public_network", ip: "192.168.31.110", bridge: "#$default_network_interface"
        master.vm.network "private_network", ip: "{{ vagrant_network }}10"
        master.vm.provision "shell", args: "{{ default_user }} #{ user_pass[0]}", inline: <<-SHELL
            apt update
            apt install ca-certificates curl gnupg
            install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            chmod a+r /etc/apt/keyrings/docker.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
            apt update
            apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
            apt install wget curl htop
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            sed -i 's/UsePAM yes/UsePAM no/' /etc/ssh/sshd_config
            systemctl restart sshd
            swapoff -a
            useradd -s /bin/bash -m -G docker $1
            echo "$2\n$2" | passwd $1
            echo "{{ default_user }} ALL=(ALL:ALL) ALL" >> /etc/sudoers
            SHELL
    end

    for i in 2..5 do
        config.vm.define "node-#{i}" do |slave|
            slave.vm.box = "ubuntu/jammy64"
            slave.vm.provider "virtualbox" do |vb|
                vb.memory = "1024"
                vb.customize ["modifyvm", :id, "--cpus", "1"]
                vb.customize ["modifyvm", :id, "--ioapic", "on"]
            end
            slave.vm.network "private_network",ip: "{{ vagrant_network }}1#{i}"
            slave.vm.provision "shell", args: "{{ default_user }} #{ user_pass[1]}", inline: <<-SHELL
                apt update
                apt upgrade
                apt install ca-certificates curl gnupg
                install -m 0755 -d /etc/apt/keyrings
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
                chmod a+r /etc/apt/keyrings/docker.gpg
                echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                tee /etc/apt/sources.list.d/docker.list > /dev/null
                apt update
                apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
                apt install -y docker.io docker-compose
                apt install wget curl htop
                sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
                sed -i 's/UsePAM yes/UsePAM no/' /etc/ssh/sshd_config
                systemctl restart sshd
                swapoff -a
                useradd -s /bin/bash -m -G docker,sudo $1
                echo "$2\n$2" | passwd $1
                echo "{{ default_user }} ALL=(ALL:ALL) ALL" >> /etc/sudoers
                SHELL
        end
    end
end

